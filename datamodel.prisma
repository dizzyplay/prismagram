type User {
    id: ID! @unique
    username: String! @unique
    email: String! @unique
    firstName:String @default(value:"")
    lastName: String
    bio: String
    posts:[Post!]! @relation(name:"PostsOfUser", onDelete:CASCADE)
    likes:[Like!]! @relation(name:"LikesOfUser", onDelete:CASCADE)
    comments:[Comment!]! @relation(name:"CommentsOfUser", onDelete:CASCADE)
    followers:[User!]! @relation(name:"FollowRelation")
    following:[User!]! @relation(name:"FollowRelation")
    rooms:[Room!]!
    loginSecret:String
}

type Post{
    id: ID! @unique
    location: String
    caption: String!
    user:User! @relation(name:"PostsOfUser")
    likes:[Like!]! @relation(name:"LikeOfPost", onDelete:CASCADE)
    files:[File!]! @relation(name:"FilesOfPost", onDelete:CASCADE)
    comments:[Comment!]! @relation(name:"CommentsOfPost", onDelete:CASCADE)
}
type Like{
    id: ID! @unique
    user:User! @relation(name:"LikesOfUser")
    post:Post! @relation(name:"LikeOfPost")
}
type Comment{
    id: ID! @unique
    text:String!
    user:User! @relation(name:"CommentsOfUser")
    post:Post! @relation(name:"CommentsOfPost")
}
type File{
    id: ID! @unique
    url:String!
    post:Post @relation(name:"FilesOfPost")
}

type Room{
    id: ID! @unique
    participants:[User!]!
    messages: [Message!]! @relation(name:"MessagesOfRoom", onDelete:CASCADE)
}
type Message{
    id: ID! @unique
    text:String!
    from:User! @relation(name:"From")
    to:User! @relation(name:"To")
    room:Room! @relation(name:"MessagesOfRoom")
}
